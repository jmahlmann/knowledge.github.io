{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the Computational Plasma Physics at Dartmouth College knowledge base! Here, you find essential materials, tutorials, and guidelines to help you begin your research in our plasma and space physics groups. Whether you're a new graduate student, undergraduate researcher, or visiting scholar, this collection of resources will help you navigate the fundamental tools and practices we use in computational analysis of plasma phenomena. We encourage you to explore these materials and reach out to our community members with any questions.</p> <p></p>"},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#tag:beginner","title":"Beginner","text":"<ul> <li>            Discovery Cluster          </li> <li>            HPC Basics          </li> </ul>"},{"location":"tags/#tag:dartmouth-infrastructure","title":"Dartmouth Infrastructure","text":"<ul> <li>            Discovery Cluster          </li> </ul>"},{"location":"tags/#tag:hpc","title":"HPC","text":"<ul> <li>            Discovery Cluster          </li> <li>            HPC Basics          </li> </ul>"},{"location":"hpc/discovery-getting-started/","title":"Discovery Cluster","text":"<p>Discovery is Dartmouth's high-performance computing cluster that provides substantial computational resources for research. The system features over 6,000 computational cores running CentOS Linux and is equipped with powerful GPU capabilities, including 10 A100, 72 A5500, and 12 V100 GPUs. For data storage, Discovery connects to a 2.6 PB DartFS system. </p> <p>With Dartmouth affiliation, you can request your Discovery account. The Dartmouth Research Computing Bill of Rights provides the research community with a foundation of computational resources.</p>","tags":["HPC","Dartmouth Infrastructure","Beginner"]},{"location":"hpc/discovery-getting-started/#connecting-to-the-discovery-cluster","title":"Connecting to the Discovery Cluster","text":"<p>After receiving your research computing access, you can connect to the cluster using Dartmouth VPN and the Secure Shell (SSH) protocol. In a terminal window, type:</p> <pre><code>ssh netID@discovery.dartmouth.edu\n</code></pre> <p>Usually, your Dartmouth netID is your username (replace above). You will be prompted to enter your password and authentication, be sure to follow safe password best practices. See also our resources on HPC basics.</p>","tags":["HPC","Dartmouth Infrastructure","Beginner"]},{"location":"hpc/discovery-getting-started/#dartmouth-physics-astronomy-on-discovery","title":"Dartmouth Physics &amp; Astronomy on Discovery","text":"<p>Dartmouth provides researchers with free access to a subvented HPC computing tier. This service offers immediate access to computing resources for computationally intensive tasks. Users receive up to 32 CPU cores, 256GB shared memory, and full access to large-memory HPC systems. Storage options include a 50GB home directory and up to 5TB scratch space. The service also includes comprehensive consulting and support for HPC management, data science, and scientific programming. Research groups may have customized allocations and dedicated lab spaces.</p> EPaCO <p>Extreme Plasmas around Compact Objects (EPaCO) group led by Prof. Mahlmann. Dedicated lab storage space for EPaCO can be accessed via:</p> <pre><code>/dartfs/rc/lab/E/EPaCO\n</code></pre> <p>Requesting access to lab ressources: E-mail to jens.f.mahlmann@dartmouth.edu.</p>","tags":["HPC","Dartmouth Infrastructure","Beginner"]},{"location":"hpc/hpc-usage-basics/","title":"HPC Basics","text":"<p>Here, you will learn essential skills for working with performance-optimized computing resources. We will guide you through making your first SSH connection to a remote cluster, navigating file systems, and optimizing your workflow for maximum efficiency. Do not worry if it seems overwhelming at first; we will break down each concept into manageable steps and provide hands-on examples to help you build routines. </p>","tags":["HPC","Beginner"]},{"location":"hpc/hpc-usage-basics/#basic-shell-commands","title":"Basic Shell Commands","text":"<p>In this section, we'll explore essential command-line interface (CLI) commands that serve as the building blocks for navigating and manipulating your system through the terminal.</p> Command Description Example <code>cd</code> Change into another directory <code>cd -</code> <code>~</code> Path of the user's home directory <code>cd ~</code> <code>ls</code> List all files and directories in current path <code>ls</code> <code>pwd</code> Displays the current path <code>pwd</code> <code>mkdir</code> Create a new directory <code>mkdir new_directory</code> <code>rm</code> Remove files or directories <code>rm file</code> <code>rm -rf</code> Force remove files or directories (handle with care) <code>rm -rf file</code> <code>cp</code> Copy files <code>cp file1 file2</code> <code>mv</code> Move files (can be used to rename files) <code>mv file1 directory/</code> <code>du</code> Show directory contents and storage size <code>du -h</code> <code>ln -s</code> Create a symbolic link <code>ln -s /path/to/source /path/to/link</code> <p>Take some time to familiarize yourself with these basic CLI commands and try them in practice. They will help you efficiently navigate and work within the cluster environment.</p> <p>Dartmouth Discovery Cluster</p> <p>To familiarize yourself with these basic commands, navigate to your group's lab space on Dartmouth's discovery cluster. Create a symbolic link to the lab space in your home directory.</p>","tags":["HPC","Beginner"]},{"location":"hpc/hpc-usage-basics/#secure-shell-ssh-protocol","title":"Secure Shell (SSH) Protocol","text":"<p>SSH (Secure Shell) is a network protocol that provides a secure way to access and manage remote computers by establishing an encrypted connection between client and server. To set it up on your local machine, you can go through the following steps (see also other online resources).</p> <ol> <li> <p>Setting up an SSH key locally. In a terminal window on your local machine, run the following command to set up an shh key:</p> <p><pre><code>ssh-keygen -t ed25519 -C \"your_email@example.com\"\n</code></pre> This generates a new SSH key using the provided email address as a label. When prompted to \"Enter a file in which to save the key,\" press Enter to accept the default file location. You can choose a passphrase to secure your SSH keys.</p> </li> <li> <p>Using SSH keys to access servers without password. In a terminal window on your local machine, run the following command to copy your SSH key to a remote host:</p> <pre><code>ssh-copy-id -i ~/.ssh/mykey user@host\n</code></pre> <p>You will be prompted to enter the remote host's access data. After the succesfull ssh-key communication, future logins should not require additional password requests. However, systems may have special security requirements.</p> <p>Dartmouth Discovery Cluster</p> <p>Dartmouth infrastructure has some caveats when using ssh-keys for remote connections.</p> </li> <li> <p>Create aliases for remote hosts. It can be a substantial shortcut to abbreviate remote host names and addresses. Open a terminal window in your home directory and access the following file:</p> <pre><code>.ssh/config\n</code></pre> <p>In this file, you can set up aliases for remote hosts. For basic functionality, use:</p> <pre><code>Host alias_name\n    HostName host_address\n    User user_name\n</code></pre> <p>You can now access the remote host by using the alias </p> <pre><code>ssh alias_name\n</code></pre> <p>Dartmouth Discovery Cluster</p> <p>For Dartmouth infrastructure, the alias could read: <pre><code>Host discovery\n    HostName discovery.dartmouth.edu\n    User netID\n</code></pre></p> </li> </ol>","tags":["HPC","Beginner"]},{"location":"hpc/hpc-usage-basics/#transfering-files-with-rsync","title":"Transfering files with rsync","text":"<p>Rsync (remote synchronization) is a powerful command-line utility for efficiently transferring and synchronizing files between different locations, whether they are on your local machine or across remote systems. This tool is particularly valuable because it uses a delta-transfer algorithm that only copies the differences between source and destination files, significantly reducing the amount of data that needs to be transferred. We will explore how to use rsync's basic features and some of its most useful advanced options. The basic syntax is as follows:</p> <pre><code>rsync -arv /path/to/origin/directory path/to/destination/directory\n</code></pre> <p>The option -arv will use archive mode to preserve permissions (a), recursively (r) loop through sub-directories, and provide verbose (v) output. Each path can be a local or remote paths, making rsync an important tool to transfer data between clusters and our local resources. The following option provides the transfer progress for each file:</p> <pre><code>rsync -arv --progress /path/to/origin/directory path/to/destination/directory\n</code></pre>","tags":["HPC","Beginner"]}]}